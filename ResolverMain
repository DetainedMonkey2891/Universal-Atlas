--// THIS IS OPEN SOURCE SO DONT GO CLAIMING IT OOL

--getgenv().Resolver = false 
--getgenv().Type = "Move Direction"
--getgenv().Bind = Enum.KeyCode.Z

local runservice = game:GetService("RunService")
local players = game:GetService("Players")
local localplayer = players.LocalPlayer
local uis = game:GetService("UserInputService")

local function Notify(message)
    game.StarterGui:SetCore("SendNotification", {
        Title = "Universal Resolver - Atlas",
        Text = message,
        Duration = 3
    })
end

local function ApplyResolver(targetPlayer, resolver, resolvertype)
    if targetPlayer ~= localplayer and targetPlayer.Character then
        local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local moveDirection = humanoid.MoveDirection * humanoid.WalkSpeed
                    
            for _, part in pairs(targetPlayer.Character:GetChildren()) do
                if resolver and part:IsA("BasePart") then
                    if resolvertype == "Move Direction" then
                        part.Velocity = moveDirection
                        part.AssemblyLinearVelocity = moveDirection
                    else
                        part.Velocity = Vector3.zero
                        part.AssemblyLinearVelocity = Vector3.zero
                    end
                end
            end
        end
    end
end

local function SigmaDirection()
    for _, target in pairs(players:GetPlayers()) do
        ApplyResolver(target, Resolver, Type)
    end
end

runservice.Heartbeat:Connect(SigmaDirection)

uis.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Bind then
        Resolver = not Resolver
        Notify("Resolver " .. (Resolver and "Enabled" or "Disabled"))
    end
end)
